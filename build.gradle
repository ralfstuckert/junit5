buildscript {
	ext {
		springBootVersion = '2.0.0.M1'
		junitJupiterVersion  = '5.0.0-M4'
		junitPlatformVersion = '1.0.0-M4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

	// Enable use of the JUnitPlatform Runner within the IDE
	testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
}

junitPlatform {
	details 'tree'
	filters.engines.include 'junit-jupiter' // we only want to run JUnit Jupiter tests...
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}
